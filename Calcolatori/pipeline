La pipeline è un modo per parallelizzare le istruzioni 
su una cpu

L'istruzione di load fa da collo di bottiglia
per il ciclo di clock, che sarebbe la durata
di esecuzione di essa. Con la pipeline si risce
a ridurre questa quantità.

Con la pipeline il ciclo di clock non è più dettato
dalla durata dell'istruzione più lenta, ma dalla durata
della fase della pipeline più lenta.

Tutte le fasi parallelizzabili vengono estese a durare
come la fase più lenta (concetto analogo all'implementazione
con ciclo singolo dove la durata di ogni istruzione veniva
estesa alla durata di quella più lenta).

Esiste una fase di riempimento della pipeline,
dopodiché la pipeline entrerà in saturazione per
poi venir svuotata.

Il miglioramento è dettato dalla durata dell'istruzione massima
e dalla durata della fase più lunga.

DOMANDA CLASSICA ESAME: determinare il miglioramento che
si otterebbe con una determinata pipeline.

Ad esempio in Intel si può accedere in memoria per prendere un operando
di un'altra operazione.

Non tutte le istruzioni possono essere parallelizzate.

A livello hardware ad esempio si dividono memoria dati e istruzioni
appunto per poter parallelizzare più tipi di istruzioni. Questi 
tipi di hazard vengono detti strutturali e sono più teorici che pratici,
perché una volta che la cpu è progettata non si presentano più.

Hazard sui dati, magari una istruzione necessita del risultato della
precedente, ma magari il risultato non è ancora stato calcolato o 
scritto sul register file.

Il compilatore può rimescolare l'ordine delle operazioni se questo 
rimescolamento non altera la semantica del programma. 
A livello hardware.

Si chiama bolla un ciclo di clock in cui non si fa niente.

Esiste l'approcio branch never taken, quindi di default si esegue l'istruzione
dopo la branch e solo se ci si accorge che bisogna saltare di riesegue il fetch.
L'approcio opposto è il branch awlays taken. 

Le colonne che separano i diversi stadi della pipeline sono dei banchi 
di registri che fanno una sorta di "snapshot" dello stadio.

